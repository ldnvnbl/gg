// ggArgs targetPath: ./proto/{{toSnake .ObjectName}}.go
package proto

import (
	"context"
	"database/sql/driver"
	"encoding/json"

    {{.UtilsPackage}}
)


type {{toCamel .ObjectName}} struct {
	{{toCamel .ObjectIdName}}    {{.ObjectIdType}}            `json:"{{toLowerCamel .ObjectIdName}}" gorm:"Column:{{toSnake .ObjectIdName}}"`
	Uid string `json:"uid" gorm:"Column:uid"`
	CreatedTime int64             `json:"createdTime" gorm:"Column:created_time"`
	Extra *{{toCamel .ObjectName}}Extra `json:"extra,omitempty" gorm:"-"`
}

type {{toCamel .ObjectName}}Extra struct {
}

func (p *{{toCamel .ObjectName}}Extra) Scan(value interface{}) error {
	return utils.UnmarshalValue(value, p)
}

func (p {{toCamel .ObjectName}}Extra) Value() (driver.Value, error) {
	return json.Marshal(p)
}

func (p {{toCamel .ObjectName}}Extra) GormDataType() string {
	return "{{toCamel .ObjectName}}Extra"
}

type {{toCamel .ObjectName}}List []*{{toCamel .ObjectName}}

type Update{{toCamel .ObjectName}}Request struct {
	{{toCamel .ObjectIdName}} string `json:"{{toLowerCamel .ObjectIdName}}"`
}

type I{{toCamel .ObjectName}}Service interface {
	Add{{toCamel .ObjectName}}(ctx context.Context, uid string, {{toLowerCamel .ObjectName}} *{{toCamel .ObjectName}}) (ret{{toCamel .ObjectName}} *{{toCamel .ObjectName}}, err error)
	Delete{{toCamel .ObjectName}}ById(ctx context.Context, uid string, {{toLowerCamel .ObjectIdName}} {{.ObjectIdType}}) (err error)
	Update{{toCamel .ObjectName}}(ctx context.Context, uid string, req *Update{{toCamel .ObjectName}}Request) ({{toLowerCamel .ObjectName}} *{{toCamel .ObjectName}}, err error)
	Get{{toCamel .ObjectName}}ById(ctx context.Context, uid string, {{toLowerCamel .ObjectIdName}} {{.ObjectIdType}}) ({{toLowerCamel .ObjectName}} *{{toCamel .ObjectName}}, err error)
}
