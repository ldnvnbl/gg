// ggArgs targetPath: ./api/{{toSnake .ObjectName}}.go
package api

import (
    "net/http"

	"github.com/gin-gonic/gin"

    {{.HttputilPackage}}
    "{{.Module}}/proto"
)


func (p *server) Add{{toCamel .ObjectName}}(c *gin.Context) {
    session := proto.GetSession(c)
    {{toLowerCamel .ObjectName}} := &proto.{{toCamel .ObjectName}}{}
    err := c.BindJSON({{toLowerCamel .ObjectName}})
  	if err != nil {
   		httputil.RespondWithBadRequestMessage(c, "bind {{toLowerCamel .ObjectName}} failed")
   		return
   	}
   	{{toLowerCamel .ObjectName}}, err = p.Kernel.{{toCamel .ObjectName}}Service.Add{{toCamel .ObjectName}}(c, session.Uid, {{toLowerCamel .ObjectName}})
   	if err != nil {
   		httputil.RespondWithError(c, err)
   		return
   	}
   	c.JSON(http.StatusOK, {{toLowerCamel .ObjectName}})
}

func (p *server) Delete{{toCamel .ObjectName}}ById(c *gin.Context) {
    session := proto.GetSession(c)
    {{toLowerCamel .ObjectIdName}} := c.Param("{{toLowerCamel .ObjectIdName}}")
    err := p.Kernel.{{toCamel .ObjectName}}Service.Delete{{toCamel .ObjectName}}ById(c, session.Uid, {{toLowerCamel .ObjectIdName}})
   	if err != nil {
   		httputil.RespondWithError(c, err)
   		return
   	}
   	c.JSON(http.StatusOK, gin.H{})
}

func (p *server) Update{{toCamel .ObjectName}}(c *gin.Context) {
    session := proto.GetSession(c)
    req := &proto.Update{{toCamel .ObjectName}}Request{}
    err := c.BindJSON(req)
  	if err != nil {
   		httputil.RespondWithBadRequestMessage(c, "bind {{toLowerCamel .ObjectName}} failed")
   		return
   	}
   	{{toLowerCamel .ObjectName}}, err := p.Kernel.{{toCamel .ObjectName}}Service.Update{{toCamel .ObjectName}}(c, session.Uid, req)
   	if err != nil {
   		httputil.RespondWithError(c, err)
   		return
   	}
   	c.JSON(http.StatusOK, {{toLowerCamel .ObjectName}})
}

func (p *server) Get{{toCamel .ObjectName}}ById(c *gin.Context) {
    session := proto.GetSession(c)
    {{toLowerCamel .ObjectIdName}} := c.Param("{{toLowerCamel .ObjectIdName}}")
    {{toLowerCamel .ObjectName}}, err := p.Kernel.{{toCamel .ObjectName}}Service.Get{{toCamel .ObjectName}}ById(c, session.Uid, {{toLowerCamel .ObjectIdName}})
   	if err != nil {
   		httputil.RespondWithError(c, err)
   		return
   	}
   	c.JSON(http.StatusOK, {{toLowerCamel .ObjectName}})
}